<?xml version="1.0" encoding="UTF-8"?>

<!-- 配置文件发生改变它将重新加载 ， 多久刷新一次 , 不需要查看logback的实时情况 -->
<configuration scan="true" scanPeriod="60 seconds"
               debug="false">
    <!-- 定义参数常量，相当于全局变量 -->
    <property name="log.level" value="debug"/><!-- 输出的级别 -->
    <property name="log.maxHistory" value="30"/> <!-- 文件保留的时间 -->
    <property name="log.filePath"
              value="d:/logs/webapps"/> <!-- 日志存储的根路径 -->
    <property name="log.pattern"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"/> <!-- 日志展现的格式 -->

    <!-- 控制台输出 -->
    <appender name="consoleAppender"
              class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
    </appender>

    <!-- debug -->
    <appender name="debugAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 文件路径 -->
        <file>${log.filePath}/debug.log</file>
        <!-- 按天滚动 -->
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.filePath}/debug/debug.%d{yyyy-MM-dd}.log.gz
            </fileNamePattern>
            <!-- 保存30天以内的文件 -->
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <!-- 将其他信息过滤掉只记录debug的信息 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>  <!-- 进行记录 -->
            <onMismatch>DENY</onMismatch> <!-- 不是DEBUG的过滤掉 -->
        </filter>
    </appender>

    <!-- info -->
    <appender name="infoAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 文件路径 -->
        <file>${log.filePath}/info.log</file>
        <!-- 按天滚动 -->
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.filePath}/info/info.%d{yyyy-MM-dd}.log.gz
            </fileNamePattern>
            <!-- 保存30天以内的文件 -->
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <!-- 将其他信息过滤掉只记录debug的信息 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>  <!-- 进行记录 -->
            <onMismatch>DENY</onMismatch> <!-- 不是DEBUG的过滤掉 -->
        </filter>
    </appender>

    <!-- error -->
    <appender name="errorAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 文件路径 -->
        <file>${log.filePath}/error.log</file>
        <!-- 按天滚动 -->
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.filePath}/error/error.%d{yyyy-MM-dd}.log.gz
            </fileNamePattern>
            <!-- 保存30天以内的文件 -->
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <!-- 将其他信息过滤掉只记录debug的信息 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>  <!-- 进行记录 -->
            <onMismatch>DENY</onMismatch> <!-- 不是DEBUG的过滤掉 -->
        </filter>
    </appender>


    <logger name="com.imooc.o2o" level="${log.level}"
            additivity="true">
        <appender-ref ref="debugAppender"/>
        <appender-ref ref="infoAppender"/>
        <appender-ref ref="errorAppender"/>
    </logger>

    <!--    <root level="info">
            <appender-ref ref="consoleAppender"/>
        </root>-->

    <root level="info">
        <appender-ref ref="consoleAppender"/>
    </root>


</configuration>